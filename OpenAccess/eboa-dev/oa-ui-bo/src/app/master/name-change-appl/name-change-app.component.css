
  /* styles.css */


  /* styles.css */

/* styles.css */

body, html {
    margin: 0;
    padding: 0;
    height: 100%;
  }
  
  .page-container {
   
    background-size: cover;
    background-repeat: no-repeat;
    background-attachment: fixed;
    color: lightsteelblue;
    height: 100%; /* Ensure the container takes full height */
  }
  
  /* Add necessary styles for the tab content */
  mat-tab-group {
    height: 100%;
  }
  
  /* Add additional styles if needed */
  
  /* Add additional styles if needed */
  /* Assuming this is your CSS file or style section */
.custom-color {
  color: #ff0000; /* Replace #ff0000 with the color code you want */
}

 
.example-box.cdk-drag-animating {
transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);
}

.example-chip .cdk-drop-list-dragging {
transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);
}
/* your-component.css */

/* Your component's CSS file */


.example-card {
position: relative; /* To position the image within the card */
}

.image-container {
  position: absolute;
  top: 0;
  left: 0;
  padding: 8px; /* Adjust the padding as needed */
  z-index: 1; /* Make sure the image appears above the card content */
  max-height: 200px; /* Set your desired maximum height here */
  text-align: center; 
}
.card-image {
  width: 80px; /* Adjust the image size as needed */
  height: 80px;
  border-radius: 50%; /* For a circular image, adjust this value as needed */
  border: 2px solid #ffffff; /* Optional: Add a border to the image */
  max-height: 100%; /* Scale the image height to fit within the container */
  max-width: 100%; /* Scale the image width proportionally */
  display: inline-block;
}
.example-section {
margin: 12px 0;
}
/* For Angular Material versions prior to 10 */
.mat-checkbox-checked .mat-checkbox-inner-container {
border-color: rgba(0, 0, 0, 0.54); /* Adjust the color as per your preference */
}
/* For Angular Material versions prior to 10 */
.mat-checkbox-checked .mat-checkbox-inner-container {
border-color: rgba(0, 0, 0, 0.54); /* Adjust the color as per your preference */
}
.mat-checkbox-disabled .mat-checkbox-checked .mat-checkbox-background {
background: transparent;
}
.icon-container {
display: flex;
flex-direction: column;
align-items: center;
position: relative;

}

/* CSS */
.disabled-icon {
pointer-events: none;
opacity: 0.5; /* Optionally, set the opacity to indicate it's disabled */
color: cornflowerblue;
}
/* styles.css or your custom CSS file */

/* Add any other styling specific to the .strong-form-field class here */
.strong-form-field {
/* For example, you can increase the font-weight and add a border */
font-weight: bold;
/* Green border as an example */
}
.strong-form-field ::ng-deep .mat-input-placeholder {
font-weight: bold;
color: black;
/* Add any other placeholder-specific styles here */
}
.ngx-datatable .datatable-body-cell {
text-align: center;
}
/* styles.css or your custom CSS file */

/* Add any other styling specific to the .right-aligned-column class here */
.right-aligned-column strong {
text-align: right;
}
/* styles.css or your custom CSS file */

.mat-icon-custom-size {
font-size: 24px; /* Adjust the size as needed */
}
/* Add this to your component's CSS file or your global stylesheet */

.tab-content {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-top: 3%;
  margin-left: 5%;
  width: 50%;
  padding: 0 10px; /* Reduce the horizontal padding for a smaller gap */
}

.file-input,
.upload-button {
  flex: 1;
  text-align: center;
}

.upload-button {
  margin-left: 10px; /* Add some spacing between the input and button */
}

/* CSS for the content box */
.content-box {
  border: 1px solid #ccc; /* Add a border */
  padding: 20px; /* Add padding to create space inside the box */
  margin: 10px; /* Add margin for spacing around the box */
  border-radius: 5px; /* Add rounded corners if desired */
  box-shadow: 0 0 5px rgba(0, 0, 0, 0.2); /* Add a shadow for depth */
  background-color: aliceblue; /* Set background color */
}

.progress-tab {
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%; /* Adjust the width as needed */
  font-size: 18px;
}

/* Reset margin and padding for step elements */
.step {
  width: 30px;
  height: 30px;
  border: 2px solid #ccc;
  border-radius: 50%;
  text-align: center;
  line-height: 30px;
  background-color: #fff;
}

.step.active {
  border-color: green;
  color: darkgreen;
  width: 50px; /* Increase the width */
  height: 50px; /* Increase the height */
  border-radius: 50%; /* Make sure to keep the border-radius for a circle */
  font-size: 24px; /* Change the font size as desired */
  background-color: chartreuse; /* Change the background color as desired */
  display: flex; /* Use flexbox for vertical alignment */
  justify-content: center; /* Center horizontally */
  align-items: center; /* Center vertically */
}
.flex-container {
  display: flex;
  align-items: center; /* Vertical alignment */
  justify-content: space-between; /* Spacing between elements */
}

.actions {
  display: flex;
  gap: 10px; /* Adjust the spacing between action buttons */
}




